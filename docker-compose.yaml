# docker-compose.yml
#
# Usage:
#   export PORT=
#   export CLOUD_RUN_SERVICE_NAME=
#   DATABASE_CLIENT=mongo
#   DATABASE_HOST=mongo
#   DATABASE_PORT=27017
#   DATABASE_NAME=strapi
#   DATABASE_USERNAME=strapi
#   DATABASE_PASSWORD=strapi
#   MONGO_INITDB_DATABASE=strapi
#   MONGO_INITDB_ROOT_USERNAME=strapi
#   MONGO_INITDB_ROOT_PASSWORD=strapi
# What can you do with this?
# Create and start all configured services with docker-compose up.
# Build your container images for local use with docker-compose build.

version: '3'

services:
  # Backend
  backend:
    build:
        context: ./backend
        dockerfile: Dockerfile
    image: backend:local
    container_name: strapi-backend
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT} 
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    networks:
      - strapi-network
    volumes:
      - ./backend:/usr/src/app #It's in the Filesystem Hierarchy Standard (FHS).
    ports:
      - '1337:1337'
    depends_on:
      - mongo

  # Database
  mongo:
    image: mongo
    container_name: strapi-mongo
    env_file: .env
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - strapi-network
    volumes:
        - ./db:/data/db
        - strapi-data:/data/db
    ports:
      - '27017:27017'
    restart: unless-stopped

  # Frontend
  frontend:
    build:
        context: ./frontend
        dockerfile: Dockerfile
    image: frontend:local
    container_name: strapi-frontend
    environment:
      - API_BASEURL=http://localhost:1337
    volumes:
      - ./frontend:/usr/src/app
    ports:
      - '3000:3000'
    depends_on:
      - backend

  # Coder
  code-server:
    image: codercom/code-server
    ports: 
    - '8080:8080' # Should be removed once you setup nginx. It is for testing the compose file only.
    volumes:
    - ~/code-server/local:/home/coder/.local
    - ${PWD}:/home/coder/project
    command: ['--auth', 'none']
  mongoclient:
      image: mongoclient/mongoclient
      container_name: strapi-mongoclient
      hostname: mongoclient
      depends_on:
        - mongodb
      networks:
        - strapi-network
      ports:
        - '3300:3000'

networks:
  strapi-network:
    driver: bridge

volumes:
  strapi-data: